#ifndef APPSTATSEVENTS_H
#define APPSTATSEVENTS_H

#include <QMap>
#include <QObject>

class AppStatsEvents
{
    Q_GADGET

public:

    // Event IDs sent to servers for statistics purpose.
    enum class EventType
    {
        NONE,
        EVENT_1ST_START,
        EVENT_1ST_SYNC,
        EVENT_1ST_SYNCED_FILE,
        EVENT_1ST_WEBCLIENT_DL,
        EVENT_UNINSTALL_STATS,
        EVENT_ACC_CREATION_START,
        EVENT_PRO_REDIRECT,
        EVENT_MEM_USAGE,
        EVENT_UPDATE,
        EVENT_UPDATE_OK,
        EVENT_DUP_FINISHED_TRSF,
        EVENT_OVER_STORAGE_DIAL,
        EVENT_OVER_STORAGE_NOTIF,
        EVENT_OVER_STORAGE_MSG,
        EVENT_ALMOST_OVER_STORAGE_MSG,
        EVENT_ALMOST_OVER_STORAGE_NOTIF,
        EVENT_MAIN_DIAL_WHILE_OVER_QUOTA,
        EVENT_MAIN_DIAL_WHILE_ALMOST_OVER_QUOTA,
        EVENT_RED_LIGHT_USED_STORAGE_MISMATCH,
        EVENT_TRSF_OVER_QUOTA_DIAL,
        EVENT_TRSF_OVER_QUOTA_NOTIF,
        EVENT_TRSF_OVER_QUOTA_MSG,
        EVENT_TRSF_ALMOST_OVER_QUOTA_MSG,
        EVENT_PAYWALL_NOTIF,
        EVENT_SYNC_ADD_FAIL_API_EACCESS,
        EVENT_TRSF_ALMOST_OVERQUOTA_NOTIF,
        EVENT_1ST_BACKUP,
        EVENT_1ST_BACKED_UP_FILE,
        EVENT_SI_NAMECONFLICT_SOLVED_MANUALLY,
        EVENT_SI_NAMECONFLICT_SOLVED_AUTOMATICALLY,
        EVENT_SI_NAMECONFLICT_SOLVED_SEMI_AUTOMATICALLY,
        EVENT_SI_LOCALREMOTE_SOLVED_MANUALLY,
        EVENT_SI_LOCALREMOTE_SOLVED_AUTOMATICALLY,
        EVENT_SI_LOCALREMOTE_SOLVED_SEMI_AUTOMATICALLY,
        EVENT_SI_IGNORE_SOLVED_MANUALLY,
        EVENT_SI_STALLED_ISSUE_RECEIVED,
        EVENT_SI_IGNORE_ALL_SYMLINK,
        EVENT_SI_SMART_MODE_FIRST_SELECTED,
        EVENT_SI_ADVANCED_MODE_FIRST_SELECTED,
        EVENT_SI_CHANGE_TO_SMART_MODE,
        EVENT_SI_CHANGE_TO_ADVANCED_MODE,
        EVENT_SI_FINGERPRINT_MISSING_SOLVED_MANUALLY,
        EVENT_DAILY_ACTIVE_USER,
        EVENT_MONTHLY_ACTIVE_USER,
        EVENT_LOGIN_CLICKED,
        EVENT_LOGOUT_CLICKED,
        EVENT_TRANSFER_TAB_CLICKED,
        EVENT_NOTIFICATION_TAB_CLICKED,
        EVENT_NOTIFICATION_SETTINGS_CLICKED,
        EVENT_UPGRADE_ACCOUNT_CLICKED,
        EVENT_OPEN_TRANSFER_MANAGER_CLICKED,
        EVENT_ADD_SYNC_CLICKED,
        EVENT_ADD_BACKUP_CLICKED,
        EVENT_UPLOAD_CLICKED,
        EVENT_AVATAR_CLICKED,
        EVENT_MENU_CLICKED,
        EVENT_MENU_ABOUT_CLICKED,
        EVENT_MENU_CLOUD_DRIVE_CLICKED,
        EVENT_MENU_ADD_SYNC_CLICKED,
        EVENT_MENU_ADD_BACKUP_CLICKED,
        EVENT_MENU_OPEN_LINKS_CLICKED,
        EVENT_MENU_UPLOAD_CLICKED,
        EVENT_MENU_DOWNLOAD_CLICKED,
        EVENT_MENU_STREAM_CLICKED,
        EVENT_MENU_SETTINGS_CLICKED,
        EVENT_MENU_EXIT_CLICKED,
        EVENT_SETTINGS_GENERAL_TAB_CLICKED,
        EVENT_SETTINGS_ACCOUNT_TAB_CLICKED,
        EVENT_SETTINGS_SYNC_TAB_CLICKED,
        EVENT_SETTINGS_BACKUP_TAB_CLICKED,
        EVENT_SETTINGS_SECURITY_TAB_CLICKED,
        EVENT_SETTINGS_FOLDERS_TAB_CLICKED,
        EVENT_SETTINGS_NETWORK_TAB_CLICKED,
        EVENT_SETTINGS_NOTIFICATIONS_TAB_CLICKED,
        EVENT_SETTINGS_EXPORT_KEY_CLICKED,
        EVENT_SETTINGS_CHANGE_PASSWORD_CLICKED,
        EVENT_SETTINGS_REPORT_ISSUE_CLICKED
    };
    Q_ENUM(EventType)

    static const char* getEventMessage(EventType event);
    static int getEventType(EventType event);

private:
    static QMap<EventType, int> mTypeMap;
    static QMap<EventType, const char*> mMessageMap;

};

#endif // APPSTATSEVENTS_H
